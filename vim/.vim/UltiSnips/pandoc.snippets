global !p
texMathZones = ['texMathZone'+x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS', 'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS', 'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z']]

texIgnoreMathZones = ['texMathText']

texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")

ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(i for i in reversed(synstackids) if i in texIgnoreMathZoneIds or i in texMathZoneIds)
		return first != ignore
	except StopIteration:
		return False
endglobal

snippet beg "begin{} / end{}"
\begin{$1}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet ali "math"
\begin{align}
	${VISUAL}$0
\end{align}
endsnippet

snippet nali "math without numbering"
\begin{align*}
	${VISUAL}$0
\end{align*}
endsnippet

snippet itm "begin itemize"
\begin{itemize}
	\item ${0:${VISUAL}}
\end{itemize}
endsnippet

snippet enu "begin enumerate"
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet im "inline math"
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet mm "math"
\[
	${1:${VISUAL}}
.\] $0
endsnippet

snippet _ "subscript"
_{$1}$0
endsnippet

snippet ^ "superscript"
^{$1}$0
endsnippet

snippet int "integral"
\int_{$1}^{$2} $0 \dd $3
endsnippet

snippet dint "integral"
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0 \dd $4
endsnippet

snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

snippet sum "sum" w
\sum_{${1:n=1}}^{${2:\infty}} ${3:a_n z^n}
endsnippet

snippet sm "short summation" w
\sum_{${1:n>0}}$0
endsnippet

snippet prod "product"
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

snippet prd "short product"
\prod_{$1}$0
endsnippet

snippet od "derivative"
\frac{\dd $1}{\dd $2}$0
endsnippet

snippet sod "second derivative"
\frac{\dd^2 $1}{\dd $2^2}$0
endsnippet

snippet pd "partial derivative"
\frac{\partial $1}{\partial $2}$0
endsnippet

snippet spd "second partial derivative"
\frac{\partial^2 $1}{\partial $2^2}$0
endsnippet

snippet ubr "underbrace"
\underbrace{$0}
endsnippet

context "math()"
snippet sqr "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

snippet rij "mrij" i
(${1:x}_${2:n})_{${3:$2}\\in${4:\\N}}$0
endsnippet

snippet tx "text"
\text{$1}$0
endsnippet

snippet frac "Fraction"
\\frac{$1}{$2}$0
endsnippet

snippet / "Numerator"
\\frac{${1:${VISUAL}}}{$2}$0
endsnippet

snippet / "Denominator"
\\frac{$1}{${2:${VISUAL}}}$0
endsnippet

snippet \oo "infinity" iA
\infty
endsnippet

snippet -> "to" iA
\to
endsnippet

snippet => "implies" Ai
\implies
endsnippet

snippet =< "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet l( "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

snippet l[ "square brackets" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

snippet l{ "curly brackets" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

snippet l< "leftangle rightangle" i
\left<${1:${VISUAL}} \right>$0
endsnippet

priority 10
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

snippet bf "bold text"
\textbf{$1}$0
endsnippet

snippet it "italic text"
\textit{$1}$0
endsnippet

snippet ul "unerlined text"
\underline{$1}$0
endsnippet

snippet ... "ldots" iA
\ldots
endsnippet

snippet c.. "cdots" iA
\cdots
endsnippet

snippet v.. "vdots" iA
\vdots
endsnippet

snippet box "boxed"
\boxed{$1}$0
endsnippet

snippet box "boxed" iA
\boxed{${VISUAL}}$0
endsnippet

snippet * "italic text"
*${1:${VISUAL}}*$0
endsnippet

snippet ** "bold text"
**${1:${VISUAL}}**$0
endsnippet

snippet img "add image"
![${1:label}](${2:path/to/file})$0
endsnippet

snippet papernote "heading and authors title for notes on papers"
# ${1:Title}
> ${2:Author(s)}

---

$0
endsnippet

snippet co "inline code"
\`${1:${VISUAL}}\`$0
endsnippet
	
